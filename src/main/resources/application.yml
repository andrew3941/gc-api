server:
  port: 8443
#  ssl:
#    key-store: classpath:ssl/tomcat.keystore
#    key-store-password: preving
#    key-password: preving

  servlet:
    context-path: /gestion-centros-api

# ===============================
# = JWT
# ===============================
jwt:
  header: Authorization
  prefijo: Bearer
  secret: clave para encriptar jwt!
  expiration: 18000
  route:
    authentication:
      path: /login

queue:
  name: gestionCentros

spring:

  jackson:
    serialization:
      indent-output: true
    date-format: com.fasterxml.jackson.databind.util.ISO8601DateFormat

  data:
    rest:
      default-media-type: application/json

  profiles:
    active: dev

  rabbitmq:
    host: 155.155.15.31
    port: 5672
    username: appGestionCentros
    password: gestionCentros

  jmx:
    enabled: false # necesario para no obtener el siguiente error: Unable to register MBean [org.apache.tomcat.dbcp.dbcp2.BasicDataSource

  # ===============================
  # = JPA / HIBERNATE
  # ===============================
  # Show or not log for each sql query
  jpa:
    show-sql: false
    # Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
    # schema will be automatically created afresh for every start of application
    hibernate:
      ddl-auto: none
      # Naming strategy
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
    # Allows Hibernate to generate SQL optimized for a particular DBMS
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        temp:
          use_jdbc_metadata_defaults: false

# ====================================
# = Otras configuraciones genericas
# ====================================


---

# =================================================
# = DEV
# =================================================

spring:
  profiles: dev

  # ===============================
  # = DATA SOURCE
  # ===============================
  # Set here configurations for the database connection

postgresql:
  datasource:
    jdbcUrl: jdbc:postgresql://155.155.16.5:5432/gestion_centros
    username: gestion_centros
    password: LTdeQVLE_ks7yJzWs
    driver-class-name: org.postgresql.Driver
    minimum-idle: 1
    maximum-pool-size: 1

api-comunicacion:
  url: https://localhost:8445/communication-api/
  usuario: usuarioPreving
  password: pwdPreving
  keystore: classpath:ssl/tomcat.keystore
  keystore-password: preving

url-drawing-documents: C:/home/preving/app/recursos/drawings
urlSeguridad: http://localhost:8444/seguridad-api2


soffice:
  host: 155.155.16.198
  port: 8100

---

# =================================================
# = DEMO
# =================================================

spring:
  profiles: demo

datasource:

  db-postgre:
    jndi-name: java:comp/env/jdbc/ssgg_postgresqlserver


api-comunicacion:
  url: https://demointranet.preving.com/communication-api2/
  usuario: usuarioPreving
  password: pwdPreving
  keystore: classpath:ssl/tomcat.keystore
  keystore-password: preving


urlSeguridad: https://demointranet.preving.com/seguridad-api


---

# =================================================
# = PROD
# =================================================

spring:
  profiles: prod

datasource:

  db-postgre:
    jndi-name: java:comp/env/jdbc/ssgg_postgresql


api-comunicacion:
  url: https://intranet.preving.com/communication-api/
  usuario: usuarioPreving
  password: pwdPreving
  keystore: classpath:ssl/tomcat.keystore
  keystore-password: preving


urlSeguridad: https://intranet.preving.com/seguridad-api



